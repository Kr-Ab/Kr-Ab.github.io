{"version":3,"file":"static/js/850.17e10b75.chunk.js","mappings":"0KAGe,SAASA,IACtB,MAAMC,GAAaC,EAAAA,EAAAA,KACnB,OACEC,EAAAA,EAAAA,MAAA,WAASC,GAAG,SAASC,IAAKJ,EAAWK,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,YACJC,EAAAA,EAAAA,KAAA,KAAGC,KAAK,cAAcC,UAAQ,EAACC,UAAU,eAAcJ,SAAC,4BAK9D,C,6CCNe,SAASJ,IACtB,MAAMD,GAAaU,EAAAA,EAAAA,UAgBnB,OAfAC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAUZ,EAAWa,QAC3B,IAAKD,EAAS,OACd,MAAME,EAAW,IAAIC,OAAOC,qBAC1BC,IAAc,IAAZC,GAAMD,EACFC,EAAMC,iBACRP,EAAQQ,UAAUC,IAAI,WACtBP,EAASQ,eAGb,CAAEC,UAAW,MAGf,OADAT,EAASU,QAAQZ,GACV,IAAME,EAASQ,cACrB,IACItB,CACT,C","sources":["components/Resume.js","components/useSectionVisible.js"],"sourcesContent":["import React from 'react';\nimport useSectionVisible from './useSectionVisible';\n\nexport default function Resume() {\n  const sectionRef = useSectionVisible();\n  return (\n    <section id=\"resume\" ref={sectionRef}>\n      <h3>Resume</h3>\n      <a href=\"/resume.pdf\" download className=\"download-btn\">\n        Download Resume (PDF)\n      </a>\n    </section>\n  );\n}\n","import { useEffect, useRef } from 'react';\n\n/**\n * Custom hook to add 'visible' class to a section when it enters the viewport.\n * Uses IntersectionObserver for better performance and accessibility.\n * Returns a ref to be attached to the section element.\n */\nexport default function useSectionVisible() {\n  const sectionRef = useRef();\n  useEffect(() => {\n    const section = sectionRef.current;\n    if (!section) return;\n    const observer = new window.IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          section.classList.add('visible');\n          observer.disconnect();\n        }\n      },\n      { threshold: 0.15 }\n    );\n    observer.observe(section);\n    return () => observer.disconnect();\n  }, []);\n  return sectionRef;\n}\n"],"names":["Resume","sectionRef","useSectionVisible","_jsxs","id","ref","children","_jsx","href","download","className","useRef","useEffect","section","current","observer","window","IntersectionObserver","_ref","entry","isIntersecting","classList","add","disconnect","threshold","observe"],"sourceRoot":""}