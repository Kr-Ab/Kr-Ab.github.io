{"version":3,"file":"static/js/513.8900f825.chunk.js","mappings":"0KAIe,SAASA,EAAUC,GAAkB,IAAjB,WAAEC,GAAYD,EAC/C,MAAME,GAAaC,EAAAA,EAAAA,KACnB,OACEC,EAAAA,EAAAA,MAAA,WAASC,GAAG,aAAaC,IAAKJ,EAAWK,SAAA,EACvCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gBACJC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,SACtBN,EAAWS,IAAI,CAACC,EAAKC,KACpBR,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAUF,SAAA,EACvBH,EAAAA,EAAAA,MAAA,MAAAG,SAAA,CACGI,EAAIE,SAAS,KAACT,EAAAA,EAAAA,MAAA,QAAMK,UAAU,aAAYF,SAAA,CAAC,KAAGI,EAAIG,eAErDV,EAAAA,EAAAA,MAAA,QAAMK,UAAU,WAAUF,SAAA,CACvBI,EAAII,SAAS,MAAIJ,EAAIK,aAExBR,EAAAA,EAAAA,KAAA,MAAAD,SACGI,EAAIM,iBAAiBP,IAAI,CAACQ,EAAGC,KAC5BX,EAAAA,EAAAA,KAAA,MAAAD,SAAaW,GAAJC,QATgBP,QAiBzC,C,6CCrBe,SAAST,IACtB,MAAMD,GAAakB,EAAAA,EAAAA,UAgBnB,OAfAC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAUpB,EAAWqB,QAC3B,IAAKD,EAAS,OACd,MAAME,EAAW,IAAIC,OAAOC,qBAC1B1B,IAAc,IAAZ2B,GAAM3B,EACF2B,EAAMC,iBACRN,EAAQO,UAAUC,IAAI,WACtBN,EAASO,eAGb,CAAEC,UAAW,MAGf,OADAR,EAASS,QAAQX,GACV,IAAME,EAASO,cACrB,IACI7B,CACT,C","sources":["components/Experience.js","components/useSectionVisible.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport useSectionVisible from './useSectionVisible';\n\nexport default function Experience({ experience }) {\n  const sectionRef = useSectionVisible();\n  return (\n    <section id=\"experience\" ref={sectionRef}>\n      <h3>Experience</h3>\n      <div className=\"exp-grid\">\n        {experience.map((exp, i) => (\n          <div className=\"exp-card\" key={i}>\n            <h4>\n              {exp.jobTitle} <span className=\"at-company\">@ {exp.company}</span>\n            </h4>\n            <span className=\"exp-meta\">\n              {exp.duration} | {exp.location}\n            </span>\n            <ul>\n              {exp.responsibilities.map((r, j) => (\n                <li key={j}>{r}</li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n}\n\nExperience.propTypes = {\n  experience: PropTypes.arrayOf(\n    PropTypes.shape({\n      jobTitle: PropTypes.string.isRequired,\n      company: PropTypes.string.isRequired,\n      duration: PropTypes.string.isRequired,\n      location: PropTypes.string.isRequired,\n      responsibilities: PropTypes.arrayOf(PropTypes.string).isRequired,\n    })\n  ).isRequired,\n};\n","import { useEffect, useRef } from 'react';\n\n/**\n * Custom hook to add 'visible' class to a section when it enters the viewport.\n * Uses IntersectionObserver for better performance and accessibility.\n * Returns a ref to be attached to the section element.\n */\nexport default function useSectionVisible() {\n  const sectionRef = useRef();\n  useEffect(() => {\n    const section = sectionRef.current;\n    if (!section) return;\n    const observer = new window.IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          section.classList.add('visible');\n          observer.disconnect();\n        }\n      },\n      { threshold: 0.15 }\n    );\n    observer.observe(section);\n    return () => observer.disconnect();\n  }, []);\n  return sectionRef;\n}\n"],"names":["Experience","_ref","experience","sectionRef","useSectionVisible","_jsxs","id","ref","children","_jsx","className","map","exp","i","jobTitle","company","duration","location","responsibilities","r","j","useRef","useEffect","section","current","observer","window","IntersectionObserver","entry","isIntersecting","classList","add","disconnect","threshold","observe"],"sourceRoot":""}