{"version":3,"file":"static/js/467.c6700937.chunk.js","mappings":"oJACA,SAAgB,QAAU,yBAAyB,cAAgB,+BAA+B,QAAU,0B,aCI7F,SAASA,EAAOC,GAAsC,IAArC,GAAEC,EAAE,MAAEC,EAAK,SAAEC,EAAQ,UAAEC,GAAWJ,EAChE,MAAMK,GAAaC,EAAAA,EAAAA,GAAkBC,EAAOC,SAEtCC,EAAoB,CAACF,EAAOG,QAASN,GAAWO,OAAOC,SAASC,KAAK,KAC3E,OACEC,EAAAA,EAAAA,MAAA,WAASb,GAAIA,EAAIc,IAAKV,EAAYD,UAAWK,EAAkBN,SAAA,CAC5DD,IAASc,EAAAA,EAAAA,KAAA,MAAAb,SAAKD,IACdC,IAGP,C,oDCdA,SAAgB,UAAY,0B,sBCIb,SAASc,EAAKjB,GAAa,IAAZ,MAAEkB,GAAOlB,EACrC,OACEgB,EAAAA,EAAAA,KAACjB,EAAAA,EAAO,CAACE,GAAG,QAAQC,MAAM,WAAUC,UAClCa,EAAAA,EAAAA,KAAA,KAAGZ,UAAWG,EAAOY,UAAUhB,SAAEe,KAGvC,C,6CCLe,SAASZ,EAAkBc,GACxC,MAAMf,GAAagB,EAAAA,EAAAA,UAgBnB,OAfAC,EAAAA,EAAAA,WAAU,KACR,MAAMZ,EAAUL,EAAWkB,QAC3B,IAAKb,EAAS,OACd,MAAMc,EAAW,IAAIC,OAAOC,qBAC1B1B,IAAc,IAAZ2B,GAAM3B,EACF2B,EAAMC,gBAAkBR,IAC1BV,EAAQmB,UAAUC,IAAIV,GACtBI,EAASO,eAGb,CAAEC,UAAW,MAGf,OADAR,EAASS,QAAQvB,GACV,IAAMc,EAASO,cACrB,CAACX,IACGf,CACT,C","sources":["webpack://kr-ab.github.io/./src/components/Section.module.css?63a8","components/Section.js","webpack://kr-ab.github.io/./src/components/About.module.css?d181","components/About.js","components/useSectionVisible.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__06lK0\",\"fadeInSection\":\"Section_fadeInSection__crWe6\",\"visible\":\"Section_visible__0rKTe\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useSectionVisible from './useSectionVisible';\nimport styles from './Section.module.css';\n\nexport default function Section({ id, title, children, className }) {\n  const sectionRef = useSectionVisible(styles.visible);\n  // Always apply both the module section class and any additional className\n  const combinedClassName = [styles.section, className].filter(Boolean).join(' ');\n  return (\n    <section id={id} ref={sectionRef} className={combinedClassName}>\n      {title && <h3>{title}</h3>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"aboutText\":\"About_aboutText__HMZGP\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './About.module.css';\nimport Section from './Section';\n\nexport default function About({ about }) {\n  return (\n    <Section id=\"about\" title=\"About Me\">\n      <p className={styles.aboutText}>{about}</p>\n    </Section>\n  );\n}\n\nAbout.propTypes = {\n  about: PropTypes.string.isRequired,\n};\n","import { useEffect, useRef } from 'react';\n\n/**\n * Custom hook to add a class to a section when it enters the viewport.\n * Accepts a className (from CSS module) to add when visible.\n */\nexport default function useSectionVisible(visibleClass) {\n  const sectionRef = useRef();\n  useEffect(() => {\n    const section = sectionRef.current;\n    if (!section) return;\n    const observer = new window.IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && visibleClass) {\n          section.classList.add(visibleClass);\n          observer.disconnect();\n        }\n      },\n      { threshold: 0.15 }\n    );\n    observer.observe(section);\n    return () => observer.disconnect();\n  }, [visibleClass]);\n  return sectionRef;\n}\n"],"names":["Section","_ref","id","title","children","className","sectionRef","useSectionVisible","styles","visible","combinedClassName","section","filter","Boolean","join","_jsxs","ref","_jsx","About","about","aboutText","visibleClass","useRef","useEffect","current","observer","window","IntersectionObserver","entry","isIntersecting","classList","add","disconnect","threshold","observe"],"sourceRoot":""}