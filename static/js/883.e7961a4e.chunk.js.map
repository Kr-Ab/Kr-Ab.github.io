{"version":3,"file":"static/js/883.e7961a4e.chunk.js","mappings":"0KAIe,SAASA,EAASC,GAAiB,IAAhB,UAAEC,GAAWD,EAC7C,MAAME,GAAaC,EAAAA,EAAAA,KACnB,OACEC,EAAAA,EAAAA,MAAA,WAASC,GAAG,YAAYC,IAAKJ,EAAWK,SAAA,EACtCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACJC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUF,SACtBN,EAAUS,IAAI,CAACC,EAAKC,KACnBR,EAAAA,EAAAA,MAAA,OAAKK,UAAU,WAAUF,SAAA,EACvBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKI,EAAIE,UACTT,EAAAA,EAAAA,MAAA,QAAMK,UAAU,WAAUF,SAAA,CACvBI,EAAIG,YAAY,KAAGH,EAAII,SAAS,KAAGJ,EAAIK,SAAS,SAHtBJ,QAUzC,C,6CCde,SAAST,IACtB,MAAMD,GAAae,EAAAA,EAAAA,UAgBnB,OAfAC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAUjB,EAAWkB,QAC3B,IAAKD,EAAS,OACd,MAAME,EAAW,IAAIC,OAAOC,qBAC1BvB,IAAc,IAAZwB,GAAMxB,EACFwB,EAAMC,iBACRN,EAAQO,UAAUC,IAAI,WACtBN,EAASO,eAGb,CAAEC,UAAW,MAGf,OADAR,EAASS,QAAQX,GACV,IAAME,EAASO,cACrB,IACI1B,CACT,C","sources":["components/Education.js","components/useSectionVisible.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport useSectionVisible from './useSectionVisible';\n\nexport default function Education({ education }) {\n  const sectionRef = useSectionVisible();\n  return (\n    <section id=\"education\" ref={sectionRef}>\n      <h3>Education</h3>\n      <div className=\"edu-grid\">\n        {education.map((edu, i) => (\n          <div className=\"edu-card\" key={i}>\n            <h4>{edu.degree}</h4>\n            <span className=\"edu-meta\">\n              {edu.institution}, {edu.location} ({edu.duration})\n            </span>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n}\n\nEducation.propTypes = {\n  education: PropTypes.arrayOf(\n    PropTypes.shape({\n      degree: PropTypes.string.isRequired,\n      institution: PropTypes.string.isRequired,\n      location: PropTypes.string.isRequired,\n      duration: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useEffect, useRef } from 'react';\n\n/**\n * Custom hook to add 'visible' class to a section when it enters the viewport.\n * Uses IntersectionObserver for better performance and accessibility.\n * Returns a ref to be attached to the section element.\n */\nexport default function useSectionVisible() {\n  const sectionRef = useRef();\n  useEffect(() => {\n    const section = sectionRef.current;\n    if (!section) return;\n    const observer = new window.IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          section.classList.add('visible');\n          observer.disconnect();\n        }\n      },\n      { threshold: 0.15 }\n    );\n    observer.observe(section);\n    return () => observer.disconnect();\n  }, []);\n  return sectionRef;\n}\n"],"names":["Education","_ref","education","sectionRef","useSectionVisible","_jsxs","id","ref","children","_jsx","className","map","edu","i","degree","institution","location","duration","useRef","useEffect","section","current","observer","window","IntersectionObserver","entry","isIntersecting","classList","add","disconnect","threshold","observe"],"sourceRoot":""}