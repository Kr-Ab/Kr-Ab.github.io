{"version":3,"file":"static/js/693.5f630caa.chunk.js","mappings":"oJACA,SAAgB,QAAU,yBAAyB,cAAgB,+BAA+B,QAAU,0B,aCI7F,SAASA,EAAOC,GAAsC,IAArC,GAAEC,EAAE,MAAEC,EAAK,SAAEC,EAAQ,UAAEC,GAAWJ,EAChE,MAAMK,GAAaC,EAAAA,EAAAA,GAAkBC,EAAOC,SAEtCC,EAAoB,CAACF,EAAOG,QAASN,GAAWO,OAAOC,SAASC,KAAK,KAC3E,OACEC,EAAAA,EAAAA,MAAA,WAASb,GAAIA,EAAIc,IAAKV,EAAYD,UAAWK,EAAkBN,SAAA,CAC5DD,IAASc,EAAAA,EAAAA,KAAA,MAAAb,SAAKD,IACdC,IAGP,C,oDCdA,SAAgB,aAAe,+BAA+B,YAAc,8BAA8B,cAAgB,gCAAgC,QAAU,0BAA0B,iBAAmB,mCAAmC,gBAAkB,kCAAkC,UAAY,6B,+BCKpT,SAASc,EAAWjB,GAAY,IAAX,KAAEkB,GAAMlB,EAC3B,MAAMmB,GAAUb,EAAAA,EAAAA,GAAkBC,EAAOC,SACzC,OACEM,EAAAA,EAAAA,MAAA,OAAKC,IAAKI,EAASf,UAAWG,EAAOa,YAAYjB,SAAA,EAC/Ca,EAAAA,EAAAA,KAAA,MAAIZ,UAAWG,EAAOc,iBAAiBlB,SAAEe,EAAKI,QAC9CN,EAAAA,EAAAA,KAAA,KAAGZ,UAAWG,EAAOgB,gBAAgBpB,SAAEe,EAAKM,eAC5CV,EAAAA,EAAAA,MAAA,KACEV,UAAWG,EAAOkB,UAClBC,KAAMR,EAAKS,OACXC,OAAO,SACPC,IAAI,sBAAqB1B,SAAA,EAEzBa,EAAAA,EAAAA,KAAA,OACEc,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,QAAQ,YACRC,MAAO,CAAEC,cAAe,SAAUC,YAAa,GAAIjC,UAEnDa,EAAAA,EAAAA,KAAA,QAAMqB,EAAE,smBACJ,cAKd,CAUe,SAASC,EAAQC,GAAgB,IAAf,SAAEC,GAAUD,EAC3C,OACEvB,EAAAA,EAAAA,KAACjB,EAAAA,EAAO,CAACE,GAAG,WAAWC,MAAM,WAAUC,UACrCa,EAAAA,EAAAA,KAAA,OAAKZ,UAAWG,EAAOkC,aAAatC,SACjCqC,EAASE,IAAI,CAACxB,EAAMyB,KACnB3B,EAAAA,EAAAA,KAACC,EAAW,CAACC,KAAMA,GAAWyB,OAKxC,C,6CC7Ce,SAASrC,EAAkBsC,GACxC,MAAMvC,GAAawC,EAAAA,EAAAA,UAgBnB,OAfAC,EAAAA,EAAAA,WAAU,KACR,MAAMpC,EAAUL,EAAW0C,QAC3B,IAAKrC,EAAS,OACd,MAAMsC,EAAW,IAAIC,OAAOC,qBAC1BlD,IAAc,IAAZmD,GAAMnD,EACFmD,EAAMC,gBAAkBR,IAC1BlC,EAAQ2C,UAAUC,IAAIV,GACtBI,EAASO,eAGb,CAAEC,UAAW,MAGf,OADAR,EAASS,QAAQ/C,GACV,IAAMsC,EAASO,cACrB,CAACX,IACGvC,CACT,C","sources":["webpack://kr-ab.github.io/./src/components/Section.module.css?63a8","components/Section.js","webpack://kr-ab.github.io/./src/components/Projects.module.css?4411","components/Projects.js","components/useSectionVisible.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__06lK0\",\"fadeInSection\":\"Section_fadeInSection__crWe6\",\"visible\":\"Section_visible__0rKTe\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useSectionVisible from './useSectionVisible';\nimport styles from './Section.module.css';\n\nexport default function Section({ id, title, children, className }) {\n  const sectionRef = useSectionVisible(styles.visible);\n  // Always apply both the module section class and any additional className\n  const combinedClassName = [styles.section, className].filter(Boolean).join(' ');\n  return (\n    <section id={id} ref={sectionRef} className={combinedClassName}>\n      {title && <h3>{title}</h3>}\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"projectsGrid\":\"Projects_projectsGrid__yRVVC\",\"projectCard\":\"Projects_projectCard__jYQ1I\",\"fadeInSection\":\"Projects_fadeInSection__XHL3m\",\"visible\":\"Projects_visible__P5ajc\",\"projectCardTitle\":\"Projects_projectCardTitle__As5A2\",\"projectCardDesc\":\"Projects_projectCardDesc__m0CDt\",\"githubBtn\":\"Projects_githubBtn__x-6Vy\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Projects.module.css';\nimport Section from './Section';\nimport useSectionVisible from './useSectionVisible';\n\nfunction ProjectCard({ proj }) {\n  const cardRef = useSectionVisible(styles.visible);\n  return (\n    <div ref={cardRef} className={styles.projectCard}>\n      <h4 className={styles.projectCardTitle}>{proj.name}</h4>\n      <p className={styles.projectCardDesc}>{proj.description}</p>\n      <a\n        className={styles.githubBtn}\n        href={proj.github}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <svg\n          width=\"22\"\n          height=\"22\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          style={{ verticalAlign: 'middle', marginRight: 6 }}\n        >\n          <path d=\"M12 .5C5.73.5.5 5.73.5 12c0 5.08 3.29 9.39 7.86 10.91.58.11.79-.25.79-.56 0-.28-.01-1.02-.02-2-3.2.7-3.88-1.54-3.88-1.54-.53-1.34-1.3-1.7-1.3-1.7-1.06-.72.08-.71.08-.71 1.17.08 1.78 1.2 1.78 1.2 1.04 1.78 2.73 1.27 3.4.97.11-.75.41-1.27.74-1.56-2.56-.29-5.26-1.28-5.26-5.7 0-1.26.45-2.29 1.19-3.1-.12-.29-.52-1.46.11-3.05 0 0 .97-.31 3.18 1.18a11.1 11.1 0 0 1 2.9-.39c.98 0 1.97.13 2.9.39 2.2-1.49 3.17-1.18 3.17-1.18.63 1.59.23 2.76.11 3.05.74.81 1.19 1.84 1.19 3.1 0 4.43-2.7 5.41-5.27 5.7.42.36.79 1.09.79 2.2 0 1.59-.01 2.87-.01 3.26 0 .31.21.68.8.56C20.71 21.39 24 17.08 24 12c0-6.27-5.23-11.5-12-11.5z\" />\n        </svg>\n        GitHub\n      </a>\n    </div>\n  );\n}\n\nProjectCard.propTypes = {\n  proj: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    github: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default function Projects({ projects }) {\n  return (\n    <Section id=\"projects\" title=\"Projects\">\n      <div className={styles.projectsGrid}>\n        {projects.map((proj, i) => (\n          <ProjectCard proj={proj} key={i} />\n        ))}\n      </div>\n    </Section>\n  );\n}\n\nProjects.propTypes = {\n  projects: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      github: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useEffect, useRef } from 'react';\n\n/**\n * Custom hook to add a class to a section when it enters the viewport.\n * Accepts a className (from CSS module) to add when visible.\n */\nexport default function useSectionVisible(visibleClass) {\n  const sectionRef = useRef();\n  useEffect(() => {\n    const section = sectionRef.current;\n    if (!section) return;\n    const observer = new window.IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting && visibleClass) {\n          section.classList.add(visibleClass);\n          observer.disconnect();\n        }\n      },\n      { threshold: 0.15 }\n    );\n    observer.observe(section);\n    return () => observer.disconnect();\n  }, [visibleClass]);\n  return sectionRef;\n}\n"],"names":["Section","_ref","id","title","children","className","sectionRef","useSectionVisible","styles","visible","combinedClassName","section","filter","Boolean","join","_jsxs","ref","_jsx","ProjectCard","proj","cardRef","projectCard","projectCardTitle","name","projectCardDesc","description","githubBtn","href","github","target","rel","width","height","fill","viewBox","style","verticalAlign","marginRight","d","Projects","_ref2","projects","projectsGrid","map","i","visibleClass","useRef","useEffect","current","observer","window","IntersectionObserver","entry","isIntersecting","classList","add","disconnect","threshold","observe"],"sourceRoot":""}