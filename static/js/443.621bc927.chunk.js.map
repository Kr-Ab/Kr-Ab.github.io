{"version":3,"file":"static/js/443.621bc927.chunk.js","mappings":"0KAIe,SAASA,EAAQC,GAAgB,IAAf,SAAEC,GAAUD,EAC3C,MAAME,GAAaC,EAAAA,EAAAA,KACnB,OACEC,EAAAA,EAAAA,MAAA,WAASC,GAAG,WAAWC,IAAKJ,EAAWK,SAAA,EACrCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeF,SAC3BN,EAASS,IAAI,CAACC,EAAMC,KACnBR,EAAAA,EAAAA,MAAA,OAAKK,UAAU,eAAcF,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKI,EAAKE,QACVL,EAAAA,EAAAA,KAAA,KAAAD,SAAII,EAAKG,eACTV,EAAAA,EAAAA,MAAA,KACEK,UAAU,aACVM,KAAMJ,EAAKK,OACXC,OAAO,SACPC,IAAI,sBAAqBX,SAAA,EAEzBC,EAAAA,EAAAA,KAAA,OACEW,MAAM,KACNC,OAAO,KACPC,KAAK,eACLC,QAAQ,YACRC,MAAO,CAAEC,cAAe,SAAUC,YAAa,GAAIlB,UAEnDC,EAAAA,EAAAA,KAAA,QAAMkB,EAAE,smBACJ,cAjByBd,QAyB7C,C,6CC7Be,SAAST,IACtB,MAAMD,GAAayB,EAAAA,EAAAA,UAgBnB,OAfAC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAU3B,EAAW4B,QAC3B,IAAKD,EAAS,OACd,MAAME,EAAW,IAAIC,OAAOC,qBAC1BjC,IAAc,IAAZkC,GAAMlC,EACFkC,EAAMC,iBACRN,EAAQO,UAAUC,IAAI,WACtBN,EAASO,eAGb,CAAEC,UAAW,MAGf,OADAR,EAASS,QAAQX,GACV,IAAME,EAASO,cACrB,IACIpC,CACT,C","sources":["components/Projects.js","components/useSectionVisible.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport useSectionVisible from './useSectionVisible';\n\nexport default function Projects({ projects }) {\n  const sectionRef = useSectionVisible();\n  return (\n    <section id=\"projects\" ref={sectionRef}>\n      <h3>Projects</h3>\n      <div className=\"projects-grid\">\n        {projects.map((proj, i) => (\n          <div className=\"project-card\" key={i}>\n            <h4>{proj.name}</h4>\n            <p>{proj.description}</p>\n            <a\n              className=\"github-btn\"\n              href={proj.github}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <svg\n                width=\"22\"\n                height=\"22\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n                style={{ verticalAlign: 'middle', marginRight: 6 }}\n              >\n                <path d=\"M12 .5C5.73.5.5 5.73.5 12c0 5.08 3.29 9.39 7.86 10.91.58.11.79-.25.79-.56 0-.28-.01-1.02-.02-2-3.2.7-3.88-1.54-3.88-1.54-.53-1.34-1.3-1.7-1.3-1.7-1.06-.72.08-.71.08-.71 1.17.08 1.78 1.2 1.78 1.2 1.04 1.78 2.73 1.27 3.4.97.11-.75.41-1.27.74-1.56-2.56-.29-5.26-1.28-5.26-5.7 0-1.26.45-2.29 1.19-3.1-.12-.29-.52-1.46.11-3.05 0 0 .97-.31 3.18 1.18a11.1 11.1 0 0 1 2.9-.39c.98 0 1.97.13 2.9.39 2.2-1.49 3.17-1.18 3.17-1.18.63 1.59.23 2.76.11 3.05.74.81 1.19 1.84 1.19 3.1 0 4.43-2.7 5.41-5.27 5.7.42.36.79 1.09.79 2.2 0 1.59-.01 2.87-.01 3.26 0 .31.21.68.8.56C20.71 21.39 24 17.08 24 12c0-6.27-5.23-11.5-12-11.5z\" />\n              </svg>\n              GitHub\n            </a>\n          </div>\n        ))}\n      </div>\n    </section>\n  );\n}\n\nProjects.propTypes = {\n  projects: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      github: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { useEffect, useRef } from 'react';\n\n/**\n * Custom hook to add 'visible' class to a section when it enters the viewport.\n * Uses IntersectionObserver for better performance and accessibility.\n * Returns a ref to be attached to the section element.\n */\nexport default function useSectionVisible() {\n  const sectionRef = useRef();\n  useEffect(() => {\n    const section = sectionRef.current;\n    if (!section) return;\n    const observer = new window.IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          section.classList.add('visible');\n          observer.disconnect();\n        }\n      },\n      { threshold: 0.15 }\n    );\n    observer.observe(section);\n    return () => observer.disconnect();\n  }, []);\n  return sectionRef;\n}\n"],"names":["Projects","_ref","projects","sectionRef","useSectionVisible","_jsxs","id","ref","children","_jsx","className","map","proj","i","name","description","href","github","target","rel","width","height","fill","viewBox","style","verticalAlign","marginRight","d","useRef","useEffect","section","current","observer","window","IntersectionObserver","entry","isIntersecting","classList","add","disconnect","threshold","observe"],"sourceRoot":""}